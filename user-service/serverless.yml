service:
  name: user-service

plugins:
  - serverless-plugin-typescript
  - serverless-plugin-optimize
  - serverless-offline
  - serverless-dotenv-plugin

provider:
  name: aws
  tracing:
    apiGateway: true
  runtime: nodejs14.x
  memorySize: 256
  stage: dev
  region: us-east-1
  environment:
    USERS_TABLE_NAME: ${self:custom.UsersTable.name}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:Query
      Resource:
        - ${self:custom.UsersTable.arn}

package:
  individually: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: userProfile-table
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: tenantId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: tenantId
            KeyType: HASH
          - AttributeName: userId
            KeyType: RANGE
functions:
  main:
    handler: src/main.handler
    events:
      - http:
          method: any
          path: /{proxy+}
custom:
  UsersTable:
    name: !Ref UsersTable
    arn: !GetAtt UsersTable.Arn
  serverless-offline:
    httpPort: ${env:USER_SERVICE_PORT}
    lambdaPort: ${env:LAMBDA_PORT}
